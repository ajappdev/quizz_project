"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
from decouple import config
from decouple import Config, RepositoryEnv
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


try:
    DOTENV_FILE = os.path.join(BASE_DIR, '.envdev')
    env_config = Config(RepositoryEnv(DOTENV_FILE))
    env_key_value = env_config.get('SECRET_KEY')
    env_database_name = env_config.get('POSTGRES_DB')
    env_database_user = env_config.get('POSTGRES_USER')
    env_database_password = env_config.get('POSTGRES_PASSWORD')
    env_database_host = env_config.get('POSTGRES_HOST')
    env_database_port = env_config.get('POSTGRES_PORT')
except Exception:
    env_key_value = config('SECRET_KEY')
    env_database_name = config('POSTGRES_DB')
    env_database_user = config('POSTGRES_USER')
    env_database_password = config('POSTGRES_PASSWORD')
    env_database_host = config('POSTGRES_HOST')
    env_database_port = config('POSTGRES_PORT')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
SECRET_KEY = env_key_value

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'app',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'app.templatetags'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        "DIRS": ["project/templates/"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': env_database_name,
        'USER': env_database_user,
        'PORT': env_database_port,
        'PASSWORD': env_database_password,
        'HOST': env_database_host,
        'POST': '',
        'DISABLE_SERVER_SIDE_CURSORS': True,
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': "".join((
            'django.contrib.auth.password_validation',
            '.UserAttributeSimilarityValidator'))
    },
    {
        'NAME': "".join((
            'django.contrib.auth.password_validation',
            '.MinimumLengthValidator'))
    },
    {
        'NAME': "".join((
            'django.contrib.auth.password_validation',
            '.CommonPasswordValidator'))
    },
    {
        'NAME': "".join((
            'django.contrib.auth',
            '.password_validation.NumericPasswordValidator'))
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/
import os

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# don't forget to launch manage.py collectstatic

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
